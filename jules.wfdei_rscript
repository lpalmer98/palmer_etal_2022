rm(list=ls())

setwd("")

yr1<-1979
yr2<-2016


## 1- Upload data from each site

loc_site<-read.csv("Site_location.csv",header=T)
loc_site<-as.data.frame(loc_site)
loc_site$Elev<-as.numeric(as.character(loc_site$Elev))

loc_site <-loc_site[order(loc_site$Site, decreasing = FALSE), ]  


data_obs<-read.csv("LP_JULES_data.csv",header=T)
data_obs <-data_obs[order(data_obs$Site, decreasing = FALSE), ]  


## 2- Open dataset
library(ncdf4)

JULES_data<-nc_open("WFDEI_JULES.UK.month.2d.1979.2016-1.nc")
light<-nc_open("PPFD_fapar_PAR.UK.month.2d.1982.2016.nc")

lon<-ncvar_get(JULES_data,'lon')
lat<-ncvar_get(JULES_data,'lat')

D13C_jules<-ncvar_get(JULES_data,'D13Cleaf')#[(3*12+1):456,,]
GPP_jules<-ncvar_get(JULES_data,'gpp')#[(3*12+1):456,,]
Tair_jules<-ncvar_get(JULES_data,'Tair')#[(3*12+1):456,,]
co2_jules<-ncvar_get(JULES_data,'co2')#[(3*12+1):456,,]
smc_avail_top_jules<-ncvar_get(JULES_data,'smc_avail_top')#[(3*12+1):456,,]
vpd_jules<-ncvar_get(JULES_data,'vpd')#[(3*12+1):456,,]
par_jules<-array(NA,dim = c(length(lon),length(lat),456))
par_jules[,,(3*12+1):456]<-ncvar_get(light,'PAR')


## 3a- Calculate GPP-weighted data for each variable for each grid-point to integrate the whole growing season
D13C_jules_gw<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
GPP_jules_gw<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
Tair_jules_gw<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
co2_jules_gw<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
smc_avail_top_jules_gw<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
vpd_jules_gw<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
par_jules_gw<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))

for (z in 1:length(lat)){
  for (k in 1:length(lon)){
    i<-1
    for (j in 1:length(yr1:yr2)){
      D13C_jules_gw[k,z,j]<-sum(D13C_jules[(i:(i+11)),k,z]*GPP_jules[(i:(i+11)),k,z],na.rm=T)/sum(GPP_jules[(i:(i+11)),k,z],na.rm=T)
      GPP_jules_gw[k,z,j]<-mean(GPP_jules[(i:(i+11)),k,z],na.rm=T)
      Tair_jules_gw[k,z,j]<-sum(Tair_jules[(i:(i+11)),k,z]*GPP_jules[(i:(i+11)),k,z],na.rm=T)/sum(GPP_jules[(i:(i+11)),k,z],na.rm=T)
      co2_jules_gw[k,z,j]<-sum(co2_jules[(i:(i+11)),k,z]*GPP_jules[(i:(i+11)),k,z],na.rm=T)/sum(GPP_jules[(i:(i+11)),k,z],na.rm=T)
      smc_avail_top_jules_gw[k,z,j]<-sum(smc_avail_top_jules[(i:(i+11)),k,z]*GPP_jules[(i:(i+11)),k,z],na.rm=T)/sum(GPP_jules[(i:(i+11)),k,z],na.rm=T)
      vpd_jules_gw[k,z,j]<-sum(vpd_jules[(i:(i+11)),k,z]*GPP_jules[(i:(i+11)),k,z],na.rm=T)/sum(GPP_jules[(i:(i+11)),k,z],na.rm=T)
     par_jules_gw[k,z,j]<-sum(par_jules[k,z,(i:(i+11))]*GPP_jules[(i:(i+11)),k,z],na.rm=T)/sum(GPP_jules[(i:(i+11)),k,z],na.rm=T)
      
      i<-i+12
      
    }
  }
}


## 3b- Average data only for July-August
mth1<-7
mth2<-8

D13C_jules_ja<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
GPP_jules_ja<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
Tair_jules_ja<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
co2_jules_ja<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
smc_avail_top_jules_ja<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
vpd_jules_ja<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))
par_jules_ja<-array(NA,dim = c(length(lon),length(lat),length(yr1:yr2)))

for (z in 1:length(lat)){
  for (k in 1:length(lon)){
    i<-1
    
    for (j in 1:length(yr1:yr2)){
      
      D13C_jules_ja[k,z,j]<-mean(D13C_jules[(i:(i+11)),k,z][mth1:mth2],na.rm=T)
      GPP_jules_ja[k,z,j]<-mean(GPP_jules[(i:(i+11)),k,z][mth1:mth2],na.rm=T)
      Tair_jules_ja[k,z,j]<-mean(Tair_jules[(i:(i+11)),k,z][mth1:mth2],na.rm=T)
      co2_jules_ja[k,z,j]<-mean(co2_jules[(i:(i+11)),k,z][mth1:mth2],na.rm=T)
      smc_avail_top_jules_ja[k,z,j]<-mean(smc_avail_top_jules[(i:(i+11)),k,z][mth1:mth2],na.rm=T)
      vpd_jules_ja[k,z,j]<-mean(vpd_jules[(i:(i+11)),k,z][mth1:mth2],na.rm=T)
      par_jules_ja[k,z,j]<-mean(par_jules[k,z,(i:(i+11))][mth1:mth2],na.rm=T)
      i<-i+12
      
    }
    
  }
}



## 4- Extract your datapoints for the different sites

for (i in 1:nrow(loc_site)){
ilat=which.min(abs(lat - loc_site$Lat[i]))
ilon=which.min(abs(lon - loc_site$Lon[i]))

if(i==1){
 data_gw <- cbind(as.character(loc_site[i,1]),loc_site[i,4]/1000,c(1979:2016),D13C_jules_gw[ilon,ilat,],Tair_jules_gw[ilon,ilat,],co2_jules_gw[ilon,ilat,],fsmc_jules_gw[ilon,ilat,],smc_avail_top_jules_gw[ilon,ilat,],vpd_jules_gw[ilon,ilat,]/1000,par_jules_gw[ilon,ilat,])
 data_ja <- cbind(as.character(loc_site[i,1]),loc_site[i,4]/1000,c(1979:2016),D13C_jules_ja[ilon,ilat,],Tair_jules_ja[ilon,ilat,],co2_jules_ja[ilon,ilat,],fsmc_jules_ja[ilon,ilat,],smc_avail_top_jules_ja[ilon,ilat,],vpd_jules_ja[ilon,ilat,]/1000,par_jules_ja[ilon,ilat,])
}else{
  data_gw <-rbind(data_gw,cbind(as.character(loc_site[i,1]),loc_site[i,4]/1000,c(1979:2016),D13C_jules_gw[ilon,ilat,],Tair_jules_gw[ilon,ilat,],co2_jules_gw[ilon,ilat,],fsmc_jules_gw[ilon,ilat,],smc_avail_top_jules_gw[ilon,ilat,],vpd_jules_gw[ilon,ilat,]/1000,par_jules_gw[ilon,ilat,]))
  data_ja <-rbind(data_ja,cbind(as.character(loc_site[i,1]),loc_site[i,4]/1000,c(1979:2016),D13C_jules_ja[ilon,ilat,],Tair_jules_ja[ilon,ilat,],co2_jules_ja[ilon,ilat,],fsmc_jules_ja[ilon,ilat,],smc_avail_top_jules_ja[ilon,ilat,],vpd_jules_ja[ilon,ilat,]/1000,par_jules_ja[ilon,ilat,]))
}

}

## Dataframe with growing season GPP-weighted variables
data_gw<-as.data.frame(data_gw)
colnames(data_gw) <-c("Site","Elev_km","Year","D13C_permil","Tair_degC","CO2_ppm","SMC_mm","VPD_kPa","par_molm2mth")

data_gw$Elev_km<-as.numeric(as.character(data_gw$Elev_km))
data_gw$D13C_permil<-as.numeric(as.character(data_gw$D13C_permil))
data_gw$CO2_ppm<-as.numeric(as.character(data_gw$CO2_ppm))
data_gw$Tair_degC<-as.numeric(as.character(data_gw$Tair_degC))
data_gw$SMC_mm<-as.numeric(as.character(data_gw$SMC_mm))
data_gw$VPD_kPa<-as.numeric(as.character(data_gw$VPD_kPa))
data_gw$par_molm2mth<-as.numeric(as.character(data_gw$par_molm2mth))
data_gw$par_molm2mth[data_gw$par_molm2mth == 0] <- NA
head(data_gw)


## Dataframe with July-August average variables
data_ja<-as.data.frame(data_ja)
colnames(data_ja) <-c("Site","Elev_km","Year","D13C_permil","Tair_degC","CO2_ppm","SMC_mm","VPD_kPa","par_molm2mth")

data_ja$Elev_km<-as.numeric(as.character(data_ja$Elev_km))
data_ja$D13C_permil<-as.numeric(as.character(data_ja$D13C_permil))
data_ja$CO2_ppm<-as.numeric(as.character(data_ja$CO2_ppm))
data_ja$Tair_degC<-as.numeric(as.character(data_ja$Tair_degC))
data_ja$SMC_mm<-as.numeric(as.character(data_ja$SMC_mm))
data_ja$VPD_kPa<-as.numeric(as.character(data_ja$VPD_kPa))
data_ja$par_molm2mth<-as.numeric(as.character(data_ja$par_molm2mth))
data_ja$par_molm2mth[data_ja$par_molm2mth == 0] <- NA

head(data_ja)


head(data_obs)

data_gw$Obs <- data_obs$Obs
data_ja$Obs <- data_obs$Obs

## Agreement between observations and predictions

## R2 = 0.16 weighted with GPP
summary(lm(data_gw$D13C_permil~data_gw$Obs))  

## R2 = 0.22 for July-August
summary(lm(data_ja$D13C_permil~data_ja$Obs))  



### 5- Multiple regression models over 1979-2016

library(performance)
library(car)
library(MASS)

## a- Simple model for observed D13C values againt GPP-weighted data
composite = subset(data_gw,!is.na(par_molm2mth) & !is.na(Obs))

mod1a <-lm(data=data_gw, Obs ~ Tair_degC + CO2_ppm + VPD_kPa + Elev_km + SMC_mm + par_molm2mth)
summary(mod1a)  ## R2 = 0.56

step <- stepAIC(mod1a, direction="both")
step$anova  
## give you an indication of the model more suitable
## here final model include: Tair_degC + CO2_ppm + VPD_kPa + SMC_mm + par_molm2mth

## So we consider only these environmental variables for comparison with predictions
mod1a <-lm(data=data_gw, Obs ~ Tair_degC + CO2_ppm + VPD_kPa + SMC_mm + par_molm2mth)
summary(mod1a)  ## R2 = 0.57

mod2a <-lm(data=data_gw, D13C_permil ~ Tair_degC + CO2_ppm + VPD_kPa  + SMC_mm + par_molm2mth)
summary(mod2a)  ## R2 = 0.60

compare_performance(mod1a,mod2a) ## RMSE values


## Individual sites

i=1;loc_site$Site[i]  ## change here number of site

site = subset(data_gw,Site == loc_site$Site[i] & !is.na(par_molm2mth) & !is.na(Obs))
mod1a <-lm(data=site, Obs ~ Tair_degC + CO2_ppm + VPD_kPa + SMC_mm + par_molm2mth)

step <- stepAIC(mod1a, direction="both")
step$anova 

as.character(step$call)[2]  ## model to use for both observations and predictions

## Manually change environmental drivers below and report them in Tables 4/5:
mod1a <-lm(data=site, Obs ~  Tair_degC + SMC_mm) 
mod2a <-lm(data=site, D13C_permil ~  Tair_degC + SMC_mm)

summary(mod1a)  
summary(mod2a)  
compare_performance(mod1a,mod2a)  ## extract RMSE value
